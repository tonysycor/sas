trigger:
- master
variables:
  azureSubscription: '#210000001C1737# Kst 195510 - SC-HUB DEV(4903d38f-fec1-4a2c-bd9f-79bb9eda788b)'
  downloadedFile: 'basicpolicywithcoy2.csv'
  destinationPath: '$(Build.ArtifactStagingDirectory)'
  destinationUrl: '$(Build.ArtifactStagingDirectory)'
 

pool:
  vmImage: 'windows-latest'

stages:
- stage: GenerateSAS
  jobs:
  - job: CopyFilesJob
    displayName: 'Copy Files to Artifact Staging Directory'
    steps:
    - checkout: self
    - task: CopyFiles@2
      displayName: 'Copy Files to Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: 'policy.ps1' # Adjust the pattern based on your file structure
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'copiedFiles'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Artifact'
      inputs:
       artifactName: 'copiedFiles'  # Should match the name of the artifact published
       path: $(System.ArtifactsDirectory)
    # other optional inputs as needed

  - job: GenerateSAS
    displayName: 'Generate SAS Token'
    steps:
    - checkout: self
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '3.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        performMultiLevelLookup: true

    - task: PowerShell@2
      displayName: 'Install Az module'
      inputs:
        targetType: 'inline'
        script: 'Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser'

    - task: PowerShell@2
      displayName: 'Generate SAS'
      inputs:
        targetType: 'filepath'
        filePath: 'sas2.ps1'
        arguments: '-resourceGroupName $(resourceGroupName) -destinationPath $(destinationPath) -servicePrincipalId $(servicePrincipalId) -servicePrincipalKey $(servicePrincipalKey) -tenantId $(tenantId) -storageAccountName $(storageAccountName) -containerName $(containerName) -blobName $(blobName) -sasPermissions $(sasPermissions) -sasExpiry $(sasExpiry)'
      env:
        servicePrincipalTenantId: $(servicePrincipalTenantId)
        servicePrincipalId: $(servicePrincipalId)
        servicePrincipalKey: $(servicePrincipalKey) 
    - task: PublishPipelineArtifact@1
      inputs:
       targetPath: '$(Build.ArtifactStagingDirectory)'
       artifact: 'SASOutput'
      displayName: 'Publish SaS Output'
  

  
   
